class:: NNModel
summary:: Load torchscripts
related:: Classes/NNModelMethod, Classes/NN
categories:: UGens>TODO

description::


On sclang, NNModel provides convenience methods to initiate model loading on the
server, and to gather model descriptions (e.g. available methods and settable
attributes).

It is used internally by the UGen link::Classes/NN::.

classmethods::

method::load
Sends a message to the server to load a torchscript file, and gathers model
informations as the server returns them. This method should be use to initialize
a new NNModel object.

argument::path
the file path of the torchscript file to load. The path is standardized with
link::Classes/String:-standardizePath:: internally.

argument::id
a number that identifies this model on the server. Pass code::-1:: (default) to
let the server set this number automatically.

argument::server
the server that should load this file. Defaults to
link::Classes/Server#*default::. Note: other servers are not currently
supported.

argument::action
function called after the model and its info are loaded. The callback function
is given the model as argument.

method::new, get
Returns a previously loaded NNModel. These methods can't be used to create new
objects, use link::#*load:: instead.
argument::key

returns:: a previously loaded NNModel.

method::loadMsg
returns the OSC message used by link::#*load::
argument:: key
argument:: path
argument:: infoFile
the path to a temporary file where the server is going to write model info.

instancemethods::

method::describe
Prints a description of the model: all available model methods with the
respective numbers of inputs and outputs, and all the settable attributes.

method::minBufferSize
Minimum blockSize required when playing this model.

method::methods
All available model methods, as a list of link::/Classes/NNModelMethod::s.

method::method
Gets a single link::/Classes/NNModelMethod:: by name
argument:: name

method::attributes
A list of all available model attribute names.

method::reload
Forces reloading this model on the server
code::
// reload all models
NN.models.do { |model| model.reload }
::

method::idx
Numeric index used on the server to identify this model.

method::path
Path of the torchscript file loaded by this model.

method::key

examples::

code::

s.boot;

s.bind {
	// when in a Routine, this method waits until the model has loaded
	NN.load(\rave, "~/rave/ravemodel.ts");
	// when model has loaded, print a description of all methods and attributes
	NN(\rave).describe;
}

// print all available methods
NN(\rave).methods
// print all settable attributes
NN(\rave).attributes

// play
{ NN(\rave, \forward).ar(WhiteNoise.ar) }.play
::
