class:: NNSet
summary:: Set a parameter for torchscripts loaded by NNModel
related:: NN, NNModel, NNModelMethod
categories:: UGens>Machine Learning

description::

classmethods::

method::kr

argument::key
The key at which the model was loaded by link::Classes/NNModel#*load::
argument::settingName
The name of the setting. To list all available setting names for a model, use
link::Classes/NNModel#settings::
argument::value
Control-rate value for the chosen parameter

examples::

code::

// load some models
(
s.options.memSize = 2**11;
s.reboot.waitForBoot {
	NNModel.load(\rave, "~/rave/model.ts")
	.describe;
	NNModel.load(\prior, "~/msprior/prior_model.ts")
	.describe;
};
)

(
// set them to play
{
	var in = WhiteNoise.ar();
	// encode input sound to latent space
	var latent = NN.ar(\rave, \encode, in);
	// generate new latent codes with msprior
	var prior = NN.ar(\prior, \forward, latent);
	// resynth latent codes to sound out
	// dropping the last prior element because msprior returns perplexity as 9th output
	var resynth = NN.ar(\rave, \decode, prior.drop(-1));

	resynth;
}.play
)

// set parameter 'listen' randomly on and off
{NNSet.kr(\prior, \listen, ToggleFF.kr(Dust.kr(0.1)))}.play
// modulate parameter 'temperature'
{NNSet.kr(\prior, \temperature, LFNoise1.kr(0.2).range(0, 4))}.play

// alternatively, "client-side":
(
Task {
	var b = true; 
	loop{ 
		NNModel(\prior).set(\listen, b);
		b = b.not;
		rrand(0.1, 10).wait 
	}
}.play
)

Task {loop{ NNModel(\prior).set(\temperature, rrand(0, 4)); rrand(0.1, 10).wait }}.play

::
